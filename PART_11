from __future__ import print_function
from sklearn import datasets
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import ShuffleSplit

if __name__ == '__main__':
    loaded_data = datasets.load_boston()
    feature = loaded_data['feature_names']
    X = loaded_data.data
    Y = loaded_data.target
    model = LinearRegression()
    best_model = model
    best_test_mse = 100
    cv = ShuffleSplit(n_splits = 3, test_size = 1, random_state = 0)
    for train, test in cv.split(X):
        model.fit(X[train], Y[train])
        train_pred = model.predict(X[train])
        train_mse = mean_squared_error(Y[train], train_pred)
        test_pred = model.predict(X[test])
        test_mse = mean_squared_error(Y[test], test_pred)
        print('train mse : ' + str(train_mse) + 'test mse : ' + str(test_mse))
        if test_mse < best_test_mse:
            best_test_mse = test_mse
            best_model = model
    print('lr best mse score : ' + str(best_test_mse))
